import { LinearGradient } from "expo-linear-gradient";
import { useRouter } from "expo-router";
import React from "react";
import {
  ImageBackground,
  Platform,
  SafeAreaView,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";
import { IconSymbol } from "../components/ui/IconSymbol";
import { Colors, Spacing, Typography } from "../constants/Theme";

export default function TermsOfServiceScreen() {
  const router = useRouter();

  const sections = [
    {
      title: "Acceptance of terms",
      content:
        "By downloading, installing, or using the DreamWeaver app, you agree to be bound by these Terms of Service. If you do not agree to these terms, please do not use our app.",
    },
    {
      title: "Description of service",
      content:
        "DreamWeaver is a mobile application that generates personalized bedtime stories for children using artificial intelligence. The service is designed to create age-appropriate, family-friendly content.",
    },
    {
      title: "User accounts and responsibilities",
      content:
        "You must be the parent or legal guardian of any child for whom you create a profile, with legal authority to provide their information. When you create an account, you must provide accurate, complete, and current information.\n\nYou are responsible for:\n• Providing accurate information\n• Safeguarding your password and account security\n• All activities under your account\n• Ensuring your use complies with these terms\n• Supervising your child's use of the app",
    },
    {
      title: "Prohibited conduct",
      content:
        "You are solely responsible for the content you provide to the service. You agree not to submit content that is unlawful, defamatory, harassing, abusive, fraudulent, obscene, or otherwise objectionable.\n\nYou agree NOT to:\n• Generate content that is illegal, harmful, or violates others' rights\n• Input inappropriate or offensive content\n• Attempt to reverse-engineer, decompile, or discover the app's source code\n• Use automated systems to access the service excessively\n• Share generated stories commercially without permission\n• Interfere with the app's operation\n• Create multiple accounts to circumvent restrictions",
    },
    {
      title: "AI-generated content and licensing",
      content:
        "The stories and illustrations provided by the service are generated by artificial intelligence. You acknowledge that:\n• AI-generated content may contain inaccuracies, errors, or inappropriate material\n• We do not guarantee the accuracy, safety, or quality of AI-generated content\n• You use generated content at your own risk\n\nLicense to Use Generated Content:\nWe grant you a limited, non-exclusive, non-transferable, revocable license to use stories and illustrations generated through your account for personal, non-commercial purposes only. You may not sell, reproduce, distribute, or create derivative works from generated content for commercial purposes.",
    },
    {
      title: "Content moderation",
      content:
        "We employ both automated and human moderation to ensure appropriate content. We reserve the right to:\n\n• Review and remove inappropriate content\n• Suspend accounts for policy violations\n• Report illegal activity to authorities\n• Update our content policies",
    },
    {
      title: "Subscription and payments",
      content:
        "If applicable:\n\n• Subscription fees are billed through your app store\n• Refunds are subject to app store policies\n• Prices may change with notice\n• Cancellation takes effect at the end of the billing period",
    },
    {
      title: "Disclaimer of warranties & limitation of liability",
      content:
        'The service is provided on an "AS IS" and "AS AVAILABLE" basis. We make no warranties, express or implied, regarding the operation or availability of the service.\n\nLimitation of Liability:\nWe shall not be liable for any indirect, incidental, special, consequential, or punitive damages, including without limitation, loss of profits, data, use, goodwill, or other intangible losses, resulting from your access to or use of the service.\n\nOur total liability is limited to the amount you paid for the service in the twelve months preceding the claim.',
    },
    {
      title: "Termination",
      content:
        "We may terminate or suspend your account immediately, without prior notice or liability, for any reason, including if you breach these terms.\n\nTermination reasons include:\n• Violation of these terms\n• Fraudulent activity\n• Extended inactivity\n• Legal requirements\n\nYou may terminate your account at any time using the in-app account deletion feature in Settings. Upon termination, your right to use the service will cease immediately, and your data will be deleted according to our Privacy Policy.",
    },
    {
      title: "Changes to terms",
      content:
        "We may update these Terms of Service periodically. Continued use of the app after changes constitutes acceptance of new terms. We will notify you of material changes.",
    },
    {
      title: "Contact information",
      content:
        "For questions about these Terms of Service, please contact us at:\n\nsupport@dreamweaver-app.com\n\nLast updated: August 6, 2025",
    },
  ];

  return (
    <ImageBackground
      source={require("../assets/images/background-landscape.png")}
      resizeMode="cover"
      style={styles.container}
    >
      <LinearGradient
        colors={[Colors.backgroundGradientStart, Colors.backgroundGradientEnd]}
        style={StyleSheet.absoluteFill}
      />

      <SafeAreaView style={styles.safeArea}>
        <View
          style={[
            styles.header,
            {
              paddingTop:
                Platform.select({
                  android: StatusBar.currentHeight || 0,
                  ios: 0,
                }) || 0,
            },
          ]}
        >
          <TouchableOpacity
            style={styles.backButton}
            onPress={() => router.back()}
          >
            <IconSymbol name="chevron.left" size={28} color={Colors.primary} />
          </TouchableOpacity>
          <Text style={styles.headerTitle}>Terms of service</Text>
          <View style={styles.headerSpacer} />
        </View>

        <ScrollView
          style={styles.scrollView}
          contentContainerStyle={styles.scrollContent}
          showsVerticalScrollIndicator={false}
        >
          {sections.map((section, index) => (
            <View key={index} style={styles.section}>
              <Text style={styles.sectionTitle}>{section.title}</Text>
              <Text style={styles.sectionContent}>{section.content}</Text>
            </View>
          ))}
        </ScrollView>
      </SafeAreaView>
    </ImageBackground>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: Colors.background,
  },
  safeArea: {
    flex: 1,
  },
  header: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    paddingHorizontal: Spacing.screenPadding,
    paddingVertical: Spacing.lg,
    backgroundColor: "transparent",
  },
  backButton: {
    width: 40,
    height: 40,
    alignItems: "center",
    justifyContent: "center",
  },
  headerTitle: {
    fontSize: Typography.fontSize.h3,
    fontWeight: Typography.fontWeight.semibold,
    color: Colors.primary,
    fontFamily: Typography.fontFamily.primary,
  },
  headerSpacer: {
    width: 40,
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: Spacing.screenPadding,
    paddingBottom: Spacing.xxxl,
  },
  section: {
    marginBottom: Spacing.xl,
  },
  sectionTitle: {
    fontSize: Typography.fontSize.h4,
    fontWeight: Typography.fontWeight.semibold,
    color: Colors.primary,
    marginBottom: Spacing.md,
    fontFamily: Typography.fontFamily.primary,
  },
  sectionContent: {
    fontSize: Typography.fontSize.medium,
    color: Colors.text,
    lineHeight: 24,
    backgroundColor: "rgba(255, 255, 255, 0.05)",
    padding: Spacing.lg,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: "rgba(212, 175, 55, 0.1)",
  },
});
